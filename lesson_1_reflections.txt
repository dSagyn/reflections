How did viewing a diff between two versions of a file help you see the bug that was introduced?
	It allowed me to skip the parts of code that are identical.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	I can access all my previous work and see what worked and what did not.
	
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	Pros are that you get logically separated versions saved. Cons are that you might forget to commit at an important part.
	
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	It depends on the application of the specific version control software.
	
How can you use the commands git log and git diff to view the history of files?
	I can use git log to view all the commits and use git diff to compare versions.

How might using version control make you more confident to make changes that could break something?
	The checkout command allows the commit to operate in detached head state which allows me to operate on this commit without worrying about the rest of the repository.

Now that you have your workspace set up, what do you want to try using Git for?
	The next assignment.

